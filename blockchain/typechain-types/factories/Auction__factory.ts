/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Auction, AuctionInterface } from "../Auction";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "bidder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "currentAmount",
        type: "uint256",
      },
    ],
    name: "NewBid",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "nftOwner",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "startingPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "endAuctionTime",
        type: "uint256",
      },
    ],
    name: "nftAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
    ],
    name: "nftDeleted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "nftId",
        type: "uint256",
      },
    ],
    name: "nftOwned",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "description",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "startingPrice",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "duration",
        type: "uint256",
      },
    ],
    name: "addnftToAuction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b506000808190555033600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610b19806100676000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063312cfa6e14610030575b600080fd5b61004a600480360381019061004591906103db565b61004c565b005b6000845103610090576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610087906104d7565b60405180910390fd5b60008351036100d4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100cb90610543565b60405180910390fd5b60008211610117576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161010e906105af565b60405180910390fd5b61012c81101561015c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101539061061b565b60405180910390fd5b6000814261016a919061066a565b9050846001600080548152602001908152602001600020600001908161019091906108b5565b5083600160008054815260200190815260200160002060010190816101b591906108b5565b50826001600080548152602001908152602001600020600301819055508060016000805481526020019081526020016000206004018190555060008081548092919061020090610987565b91905055507f9b40b093f39caa59d370695ae679d162e37f6ba945c6bc200791830a60a9ad1f858533868560405161023c959493929190610a82565b60405180910390a15050505050565b6000604051905090565b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6102b282610269565b810181811067ffffffffffffffff821117156102d1576102d061027a565b5b80604052505050565b60006102e461024b565b90506102f082826102a9565b919050565b600067ffffffffffffffff8211156103105761030f61027a565b5b61031982610269565b9050602081019050919050565b82818337600083830152505050565b6000610348610343846102f5565b6102da565b90508281526020810184848401111561036457610363610264565b5b61036f848285610326565b509392505050565b600082601f83011261038c5761038b61025f565b5b813561039c848260208601610335565b91505092915050565b6000819050919050565b6103b8816103a5565b81146103c357600080fd5b50565b6000813590506103d5816103af565b92915050565b600080600080608085870312156103f5576103f4610255565b5b600085013567ffffffffffffffff8111156104135761041261025a565b5b61041f87828801610377565b945050602085013567ffffffffffffffff8111156104405761043f61025a565b5b61044c87828801610377565b935050604061045d878288016103c6565b925050606061046e878288016103c6565b91505092959194509250565b600082825260208201905092915050565b7f496e76616c6964206e616d650000000000000000000000000000000000000000600082015250565b60006104c1600c8361047a565b91506104cc8261048b565b602082019050919050565b600060208201905081810360008301526104f0816104b4565b9050919050565b7f496e76616c6964206465736372697074696f6e00000000000000000000000000600082015250565b600061052d60138361047a565b9150610538826104f7565b602082019050919050565b6000602082019050818103600083015261055c81610520565b9050919050565b7f496e76616c696420707269636500000000000000000000000000000000000000600082015250565b6000610599600d8361047a565b91506105a482610563565b602082019050919050565b600060208201905081810360008301526105c88161058c565b9050919050565b7f496e76616c6964206475726174696f6e00000000000000000000000000000000600082015250565b600061060560108361047a565b9150610610826105cf565b602082019050919050565b60006020820190508181036000830152610634816105f8565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610675826103a5565b9150610680836103a5565b92508282019050808211156106985761069761063b565b5b92915050565b600081519050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b600060028204905060018216806106f057607f821691505b602082108103610703576107026106a9565b5b50919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b60006008830261076b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8261072e565b610775868361072e565b95508019841693508086168417925050509392505050565b6000819050919050565b60006107b26107ad6107a8846103a5565b61078d565b6103a5565b9050919050565b6000819050919050565b6107cc83610797565b6107e06107d8826107b9565b84845461073b565b825550505050565b600090565b6107f56107e8565b6108008184846107c3565b505050565b5b81811015610824576108196000826107ed565b600181019050610806565b5050565b601f8211156108695761083a81610709565b6108438461071e565b81016020851015610852578190505b61086661085e8561071e565b830182610805565b50505b505050565b600082821c905092915050565b600061088c6000198460080261086e565b1980831691505092915050565b60006108a5838361087b565b9150826002028217905092915050565b6108be8261069e565b67ffffffffffffffff8111156108d7576108d661027a565b5b6108e182546106d8565b6108ec828285610828565b600060209050601f83116001811461091f576000841561090d578287015190505b6109178582610899565b86555061097f565b601f19841661092d86610709565b60005b8281101561095557848901518255600182019150602085019450602081019050610930565b86831015610972578489015161096e601f89168261087b565b8355505b6001600288020188555050505b505050505050565b6000610992826103a5565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036109c4576109c361063b565b5b600182019050919050565b60005b838110156109ed5780820151818401526020810190506109d2565b60008484015250505050565b6000610a048261069e565b610a0e818561047a565b9350610a1e8185602086016109cf565b610a2781610269565b840191505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610a5d82610a32565b9050919050565b610a6d81610a52565b82525050565b610a7c816103a5565b82525050565b600060a0820190508181036000830152610a9c81886109f9565b90508181036020830152610ab081876109f9565b9050610abf6040830186610a64565b610acc6060830185610a73565b610ad96080830184610a73565b969550505050505056fea26469706673582212200dc12bbab15be35762f1d72f017914a68b620e4a731c2ed45f9b75d6aeb5f5a064736f6c634300081c0033";

type AuctionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AuctionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Auction__factory extends ContractFactory {
  constructor(...args: AuctionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Auction & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Auction__factory {
    return super.connect(runner) as Auction__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AuctionInterface {
    return new Interface(_abi) as AuctionInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Auction {
    return new Contract(address, _abi, runner) as unknown as Auction;
  }
}
